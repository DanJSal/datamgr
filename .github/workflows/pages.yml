name: Deploy link hub to Pages

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      force:
        description: "Run even if the last commit says [skip-index]"
        required: false
        default: "false"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    # Run unless last commit includes [skip-index], OR manual dispatch with force=true
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.force == 'true' || (github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip-index]')) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Lint (AST + import)
        run: |
          python tools/lint.py --dir datamgr

      - name: Build Package Atlas artifacts (delta-aware)
        env:
          REPO: ${{ github.event.repository.name }}
        run: |
          set -euo pipefail
          mkdir -p artifacts

          if [ -f artifacts/nodes.json ] && python -c "import json,sys,pathlib; p=pathlib.Path('.dm/deltas.json'); sys.exit(0 if (p.exists() and (lambda d: (d.get('paths') or d.get('modules')))(json.loads(p.read_text(encoding='utf-8') or '{}'))) else 1)"; then
            echo '[ci] delta manifest present -> delta-only collect'
            python tools/introspect_collect.py --dir datamgr --out artifacts --delta-only --deltas .dm/deltas.json
            python tools/nav_merge.py
            AFFECT_OPT="--affected-fqids artifacts/affected_fqids.txt"
          else
            echo '[ci] no deltas (or first run) -> full collect'
            python tools/introspect_collect.py --dir datamgr --out artifacts
            AFFECT_OPT=""
          fi

          python tools/build_package_atlas.py \
            --commit "${GITHUB_SHA::7}" \
            --nodes artifacts/nodes.json \
            --edges artifacts/edges.json \
            ${AFFECT_OPT} \
            --out docs/api-nav \
            --repo "$REPO"

      - name: Generate repo index (always full)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python tools/repo_index.py
          ls -la docs || true

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    needs: build
    if: ${{ always() && needs.build.result == 'success' }}
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
